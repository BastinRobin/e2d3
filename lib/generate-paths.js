'use strict';

/*
 *
 */

var targets = [
   'd3',
   'd3plus',
   'c3',
   'jquery',
   'lodash',
   'topojson',
   'coffee-script',
   'JSXTransformer',
   'react',
   'vue'
 ];

/*
 * definition
 */

var http = require('http');
var fs = require('fs');

var args = process.argv.slice(2);

var cdnjs = 'http://api.cdnjs.com/libraries';

var dest = args[0] || 'src/misc/paths.coffee';


/*
 * generator
 */

var script = '';

script += '#\n'
script += '# This file is generated by "lib/generate-paths.js"\n'
script += '#\n'
script += 'e2d3_default_paths =\n';

var extractor = function (lib) {
  if (!/^https:\/\/.+\.js$/.test(lib.latest)) {
    return;
  }

  if (targets.indexOf(lib.name) == -1) {
    return;
  }

  var name = lib.name;
  var path = lib.latest.substring(6, lib.latest.length - 3);
  var failback = path.substring(path.lastIndexOf('/') + 1).replace(/\.min$/, '');

  script += "  '" + name + "': ['" + path + "', '" + failback + "']\n";
};

var additional = [
  { name: 'JSXTransformer', latest: 'https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js' }
];


/*
 * main
 */
http.get(cdnjs, function (res) {
  var body = '';

  res.on('data', function (chunk) {
    body += chunk;
  });

  res.on('end', function (res) {
    var ret = JSON.parse(body);

    ret.results.forEach(extractor);

    additional.forEach(extractor);

    fs.writeFile(dest, script, function (err) {
      if (err) {
        console.log(err)
        process.exit(1);
      }

      console.log('SUCCESS: ' + dest);
    });
  });

}).on('error', function (e) {
  console.log(e);
  process.exit(1);
});
