'use strict';

/*
 * target
 */

var targets = [
  'd3',
  'd3plus',
  'c3',
  'jquery',
  'lodash',
  'topojson',
  'coffee-script',
  'JSXTransformer',
  'react',
  'vue',
  'three.js'
];

var additional = [
  { name: 'JSXTransformer', latest: 'https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js' },
  { name: 'coffee-script', latest: 'https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js' },
  { name: 'async', latest: 'https://cdnjs.cloudflare.com/ajax/libs/requirejs-plugins/1.0.3/async.min.js' },
  { name: 'font', latest: 'https://cdnjs.cloudflare.com/ajax/libs/requirejs-plugins/1.0.3/font.min.js' },
  { name: 'goog', latest: 'https://cdnjs.cloudflare.com/ajax/libs/requirejs-plugins/1.0.3/goog.min.js' },
  { name: 'image', latest: 'https://cdnjs.cloudflare.com/ajax/libs/requirejs-plugins/1.0.3/image.min.js' }
];

var renames = {
  'three.js': 'three'
};

var shim = {
  'three': {
    exports: 'THREE'
  }
};

/*
 * definition
 */

var http = require('http');
var fs = require('fs');

var args = process.argv.slice(2);

var cdnjs = 'http://api.cdnjs.com/libraries';

var dest = args[0] || 'src/misc/paths.js';


/*
 * generator
 */

var paths = {};

var extractor = function (lib) {
  if (!/^https:\/\/.+\.js$/.test(lib.latest)) {
    return;
  }

  if (targets.indexOf(lib.name) == -1) {
    return;
  }

  var name = renames[lib.name] || lib.name;
  var path = lib.latest.substring(6, lib.latest.length - 3);
  var failback = path.substring(path.lastIndexOf('/') + 1).replace(/\.min$/, '');

  paths[name] = [ path, failback ];
};


/*
 * main
 */
http.get(cdnjs, function (res) {
  var body = '';

  res.on('data', function (chunk) {
    body += chunk;
  });

  res.on('end', function (res) {
    var ret = JSON.parse(body);

    ret.results.forEach(extractor);

    additional.forEach(extractor);

    var script = '';

    script += '//\n'
    script += '// This file is generated by "lib/generate-paths.js"\n'
    script += '//\n'
    script += 'var e2d3_default_paths = ' + JSON.stringify(paths, null, '  ') + ';\n';
    script += 'var e2d3_default_shim = ' + JSON.stringify(shim, null, '  ') + ';\n';


    fs.writeFile(dest, script, function (err) {
      if (err) {
        console.log(err)
        process.exit(1);
      }

      console.log('SUCCESS: ' + dest);
    });
  });

}).on('error', function (e) {
  console.log(e);
  process.exit(1);
});
